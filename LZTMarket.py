# shitcode by Y4sperMaglot

# –ü–æ–∫–∞ —Ç–æ–ª—å–∫–æ —Ç–∞–∫

from .. import loader, utils

from bs4 import BeautifulSoup as BS
import requests
import base64
from asyncio import sleep

@loader.tds
class LZTMarketMod(loader.Module):
    """–í—ã–≤–æ–¥ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ —Å –º–∞—Ä–∫–µ—Ç–∞ lolz"""

    strings = {'name': 'LZTMarket'}

    async def client_ready(self, client, db):
        self.client = client

    async def lolzcmd(self, message):
        """.lolz —Ä–µ–ø–ª–∞–π –∏–ª–∏ —Å—Å—ã–ª–∫–∞"""
        await message.edit('<b>–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏...</b>')
        UserAgent = 'Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; Acoo Browser; Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1) ; .NET CLR 2.0.50727)'

        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏ #
        args = utils.get_args_raw(message)
        reply = await message.get_reply_message()

        if not reply and not args:
            await message.edit('<b>–†–µ–ø–ª–∞–π –∏–ª–∏ —Å—Å—ã–ª–∫–∞</b>')
            return

        url = args or reply.raw_text
        if 'lolz.guru/market' not in url and len(url) < 27:
            await message.edit('<b>–°—Å—ã–ª–∫–∏ –Ω–µ—Ç</b>')
            return

        # –û–±—Ö–æ–¥ –∑–∞—â–∏—Ç—ã –ø–∞—Ä—Å–∏–Ω–≥–∞ #
        await message.edit('<b>–û–±—Ö–æ–¥ –∑–∞—â–∏—Ç—ã –æ—Ç –ø–∞—Ä—Å–∏–Ω–≥–∞...</b>')

        try:
            f = requests.get('https://lolz.guru/process-qv9ypsgmv9.js', headers={
                "User-Agent": UserAgent}).text

            bytes = str(f.split(',')[6]).replace(';(function(_0x2217ae', '').replace('+', '').replace("'", "").replace(']', '')
            strbyte = str(base64.b64decode(bytes).decode('utf-8'))
            page = requests.get(url, headers={
                "User-Agent": UserAgent,
                "Cookie": f'df_id={strbyte}',
                "Accept-Language": "ru"})
            await message.edit('<b>–£—Å–ø–µ—à–Ω–æ</b>')
            await sleep(0.5)

        except:
            await message.edit('<b>–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...</b>')
            return

        # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã #
        await message.edit('<b>–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã...</b>')

        soup = BS(page.text, 'html.parser')

        link = f'<a href="{url}">–û—Ç–∫—Ä—ã—Ç—å</a>'  # –°—Å—ã–ª–∫–∞

        try:
            service_account = soup.find_all('span', itemprop='title')[1].string.strip()   # –ù–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã –∏–ª–∏ —Å–µ—Ä–≤–∏—Å–∞
        except:
            await message.edit('<b>–°—Å—ã–ª–∫–∞ –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç –≤ –º–∞—Ä–∫–µ—Ç–µ –Ω–µ–≤–∞–ª–∏–¥–Ω–∞</b>')
            return

        try:
            header = soup.find_all('h1', class_='h1Style marketItemView--titleStyle fl_l')[0].string.strip()   # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        except:
            header = "–ü—É—Å—Ç–æ–π"

        sellerCon = soup.find('a', class_='username fl_l')
        seller = sellerCon.findChildren('span')[0].string.strip()     # –°–µ–ª–ª–µ—Ä

        price = soup.find_all('span', class_='value')[0].string.strip()  # –¶–µ–Ω–∞

        try:
            accorigin = soup.find_all('abbr', class_='DateTime')[0].string.strip()
        except:
            accorigin = soup.find_all('span', class_='DateTime')[0].string.strip()    # –î–∞—Ç–∞

        if 'world of tanks' in service_account.lower():
            tanks = soup.find('ul', id='wotTabs')
            tanks_child = tanks.findChildren('span', 'muted')

            tops = tanks_child[0].string.strip()
            premTanks = tanks_child[1].string.strip()
            allTanks = tanks_child[2].string.strip()

            label = soup.find_all('div', class_='label')
            region = label[0].string.strip()
            phone = label[1].string.strip()
            gold = label[2].string.strip()
            silv = label[3].string.strip()
            battles = label[4].string.strip()
            victory = label[5].string.strip()
            clan = label[6].string
            prem = label[7].string.strip()
            active = label[8].string.strip()
            reg = label[9].string.strip()
            clan = '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ' if label[6].string is None else clan.strip()

            await message.delete()
            await message.client.send_message(message.to_id, f'<b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ:</b>\nüé™ –ö–æ–Ω—Ç–æ—Ä–∞:  {service_account}\nüè∑ –ó–∞–≥–æ–ª–æ–≤–æ–∫:  {header}\nüë®‚Äçüíª –ü—Ä–æ–¥–∞–≤–µ—Ü:  {seller}\nüíµ –¶–µ–Ω–∞:  {price}—Ä—É–±\n‚åõ –î–∞—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:  {accorigin}\n\n <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ World of Tanks:</b>\nü¶Ω –í—Å–µ —Ç–∞–Ω–∫–∏:  {allTanks}\nü¶Ω –¢–æ–ø—ã:  {tops}\nü¶Ω –ü—Ä–µ–º—ã:  {premTanks}\nüåé –†–µ–≥–∏–æ–Ω:  {region}\nüì± –ü—Ä–∏–≤—è–∑–∫–∞ –∫ —Ç–µ–ª–µ—Ñ–æ–Ω—É:  {phone}\nüí∞ –ó–æ–ª–æ—Ç–æ:  {gold}\nüíµ –°–µ—Ä–µ–±—Ä–æ:  {silv}\n‚öî –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–æ—ë–≤:  {battles}\nüèÜ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ(–ø—Ä–æ—Ü–µ–Ω—Ç –ø–æ–±–µ–¥):  {victory}\nüè≥Ô∏è‚Äçüåà –ö–ª–∞–Ω:  {clan}\nü•á –ü—Ä–µ–º–∏—É–º:  {prem}\nü§π‚Äç‚ôÇ –ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:  {active}\nüí≥ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:  {reg}\n\nüîó –°—Å—ã–ª–∫–∞ –Ω–∞ —Ç—Ä–µ–π–¥:  {link}', reply_to=await message.get_reply_message())

        elif '–≤–∫–æ–Ω—Ç–∞–∫—Ç–µ' in service_account.lower():
            label = soup.find_all('div', class_='label')
            friends = label[0].string.strip()
            subs = label[1].string.strip()
            votes = label[2].string.strip()
            auth = label[3].string.strip()
            phone = label[4].string.strip()
            email = label[5].string.strip()
            sex = label[6].string.strip()
            yo = label[7].string.strip()
            conreg = soup.find('div', class_='marketItemView--mainInfoContainer')
            reg = conreg.findChildren('span', class_='DateTime')[0].string.strip()

            await message.delete()
            await message.client.send_message(message.to_id, f'<b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ:</b>\nüé™ –ö–æ–Ω—Ç–æ—Ä–∞:  {service_account}\nüè∑ –ó–∞–≥–æ–ª–æ–≤–æ–∫:  {header}\nüë®‚Äçüíª –ü—Ä–æ–¥–∞–≤–µ—Ü:  {seller}\nüíµ –¶–µ–Ω–∞:  {price}—Ä—É–±\n‚åõ –î–∞—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:  {accorigin}\n\n <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ:</b>\nüë§ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥—Ä—É–∑–µ–π:  {friends}\nüë• –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤:  {subs}\nüì¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ–ª–æ—Å–æ–≤:  {votes}\nüõ° –î–≤—É—Ö—ç—Ç–∞–ø–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è:  {auth}\nüì± –ü—Ä–∏–≤—è–∑–∫–∞ –∫ —Ç–µ–ª–µ—Ñ–æ–Ω—É:  {phone}\n‚úâ –ü—Ä–∏–≤—è–∑–∫–∞ –∫ –ø–æ—á—Ç–µ:  {email}\nü§° –ü–æ–ª:  {sex}\nüíØ –í–æ–∑—Ä–∞—Å—Ç:  {yo}\nüí≥ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:  {reg}\n\nüîó –°—Å—ã–ª–∫–∞ –Ω–∞ —Ç—Ä–µ–π–¥:  {link}', reply_to=await message.get_reply_message())
                    # –±–ª—è—Ç—å —è –∑–∞–µ–±–∞–ª—Å—è –≤—ã–±–∏—Ä–∞—Ç—å —Å–º–∞–π–ª—ã

        elif 'origin' in service_account.lower():
            gamesCon = soup.find_all('div', class_='gameTitle')
            games = ''
            for game in gamesCon:
                games += f'{game.string.strip()}, '
            games = games[:-2]

            infCon = soup.find_all('div', class_='marketItemView--counters')
            for sub in infCon:
                check = sub.findChildren('div', class_='counter ea_subscription')
                if check:
                    subscribe = check[0].findChildren('div', class_='label')[0].string.strip()
                    country = sub.findChildren('div', class_='label')[1].string.strip()
                    break

            await message.delete()
            await message.client.send_message(message.to_id, f'<b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ:</b>\nüé™ –ö–æ–Ω—Ç–æ—Ä–∞:  {service_account}\nüè∑ –ó–∞–≥–æ–ª–æ–≤–æ–∫:  {header}\nüë®‚Äçüíª –ü—Ä–æ–¥–∞–≤–µ—Ü:  {seller}\nüíµ –¶–µ–Ω–∞:  {price}—Ä—É–±\n‚åõ –î–∞—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:  {accorigin}\n\n <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ Origin:</b>\nüéÆ –ò–≥—Ä—ã:  {games}\nüé´ –¢–∏–ø –ø–æ–¥–ø–∏—Å–∫–∏:  {subscribe}\nüåé –°—Ç—Ä–∞–Ω–∞:  {country}\n\nüîó –°—Å—ã–ª–∫–∞ –Ω–∞ —Ç—Ä–µ–π–¥:  {link}', reply_to=await message.get_reply_message())
        else:
            await message.client.send_message(message.to_id, f'<b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ:</b>\nüé™ –ö–æ–Ω—Ç–æ—Ä–∞:  {service_account}\nüè∑ –ó–∞–≥–æ–ª–æ–≤–æ–∫:  {header}\nüë®‚Äçüíª –ü—Ä–æ–¥–∞–≤–µ—Ü:  {seller}\nüíµ –¶–µ–Ω–∞:  {price}—Ä—É–±\n‚åõ –î–∞—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:  {accorigin}\n\nüîó –°—Å—ã–ª–∫–∞ –Ω–∞ —Ç—Ä–µ–π–¥:  {link}', reply_to=await message.get_reply_message())




















